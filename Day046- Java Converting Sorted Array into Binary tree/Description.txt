Topic of the Day: Java Converting Sorted Array into Binary tree
Question: An integer array where the elements are sorted in ascending order, converted it into a height-balanced binary search tree. A height-balanced binary tree is a binary tree in which the depth of the two subtrees of every node never differs by more than one.

Testcase1:
Input: nums = [-10,-3,0,5,9]
Output: [0,-3,9,-10,null,5]
Explanation: [0,-10,5,null,-3,null,9] 

Testcase2:
Input: [1,3]
Output: [3,1]
Explanation: [1,null,3] and [3,1] are both height-balanced BSTs.

Example:
Your input:   [-17,3,6,9,23]
Output:        [6,-17,9,null,3,null,23]
Expected:     [6,3,23,-17,null,9]

Description:  It is a sorted array and a binary tree which we have to convert. Now, (0) is taken as a root node because (0) is a mid point of this array if it have been some other element as a root node then we have trying to make a binary tree and Binary tree is a tree which has the left element as smaller than the root node and right element are always bigger than the root node.
(0) is a root node and (-3) is lesser than the (0) and (9) is greater than the (0) if (-3) is the root node than (-10) is smaller than that which is left of that and similarly 9 has 5 which is right of it. It is generally a height balance because the element would have evenly distributed to the left and right side and the root node should be the middle node. we can use recursion on this it is very similar to the binary search.
