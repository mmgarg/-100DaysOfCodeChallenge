Topic of the Day: Java Array sort color
Problem: An array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue. We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively. We must solve this problem without using the library's sort function.
 
Example 1:
Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
Example 2:
Input: nums = [2,0,1]
Output: [0,1,2]
 
Testcase:
Your input
[2,0,2,1,1,0]
[2,0,1]
Output
[0,0,1,1,2,2]
[0,1,2]
Diff
Expected
[0,0,1,1,2,2]
[0,1,2]

Explanation:
•	The problem was posed with three colors, here `0′, `1′ and `2′. The array is divided into four sections: 
•	arr[1] to arr[low – 1]
•	arr[low] to arr[mid – 1]
•	arr[mid] to arr[high – 1]
•	arr[high] to arr[n]
•	If the ith element is 0 then swap the element to the low range.
•	Similarly, if the element is 1 then keep it as it is.
•	If the element is 2 then swap it with an element in high range.
